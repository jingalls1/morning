{"version":3,"sources":["misc.js","App.js","serviceWorker.js","index.js"],"names":["days","months","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","axiosHolidays","res","d","Date","year","getFullYear","month","getMonth","concat","day","getDate","today","undefined","data","holidays","console","log","setState","holidayName","name","timeOfDay","getHours","react_default","a","createElement","className","react_pose_text_es","initialPose","pose","listLoop","getDay","daschedule","i","state","schState","length","push","newsHandler","news","arrTest","style","color","fontWeight","textShadow","href","url","title","holidayHandler","weatherData","descrip1","descrip2","temp","tempMin","tempMax","_this2","axios","get","then","weather","main","description","Math","round","temp_min","temp_max","articles","lineHeight","id","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kRAAaA,SAAO,CAClB,SACA,SACA,UACA,YACA,WACA,SACA,aAGWC,EAAS,CACpB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,mBCZIC,EAAY,CAChBC,KAAM,CAAEC,QAAS,EAAGC,EAAG,IACvBC,MAAO,CACLF,QAAS,EACTC,EAAG,EACHE,MAAO,SAAAC,GAAA,OAA+B,IAA/BA,EAAGC,aAIOC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA8CRQ,cAAgB,SAACC,GACf,IAAIC,EAAI,IAAIC,KACRC,EAAOF,EAAEG,cACTC,EAAQJ,EAAEK,YACdD,GAAgB,GACJ,KACVA,EAAK,IAAAE,OAAOF,IAEd,IAAIG,EAAMP,EAAEQ,UACRD,EAAM,KACRA,EAAG,IAAAD,OAAOC,IAEZ,IAAIE,EAAK,GAAAH,OAAMJ,EAAN,KAAAI,OAAcF,EAAd,KAAAE,OAAuBC,QACCG,IAA7BX,EAAIY,KAAKC,SAASH,GACpBI,QAAQC,IAAI,qBAEZvB,EAAKwB,SAAS,CAACC,YAAajB,EAAIY,KAAKC,SAASH,GAAO,GAAGQ,QA/DzC1B,EAmEnB2B,UAAY,WACV,IAAIlB,EAAI,IAAIC,KACZ,OAAID,EAAEmB,WAAa,GAEfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7C,UAAWA,GAAtD,wBAKKmB,EAAEmB,YAAc,IAAMnB,EAAEmB,WAAa,GAE5CC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7C,UAAWA,GAAtD,0BAOFuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7C,UAAWA,GAAtD,yBAxFWU,EA+FnBoC,SAAW,WAGT,IAFA,IAAI3B,GAAI,IAAIC,MAAO2B,SACfC,EAAa,GACRC,EAAI,EAAGA,EAAIvC,EAAKwC,MAAMC,SAAShC,GAAGiC,OAAQH,IACjDD,EAAWK,KACTd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK/B,EAAKwC,MAAMC,SAAShC,GAAG8B,MAIlC,OAAOD,GAzGUtC,EA4GnB4C,YAAc,WACZ,GAAI5C,EAAKwC,MAAMK,KAAKH,OAAS,EAC3B,OAAOb,EAAAC,EAAAC,cAAA,mBAGP,IADA,IAAIe,EAAU,GACLP,EAAI,EAAGA,EAAI,EAAGA,IACrBO,EAAQH,KACNd,EAAAC,EAAAC,cAAA,KACEgB,MAAO,CAAEC,MAAO,QAASC,WAAY,OAAQC,WAAY,qBACzDC,KAAMnD,EAAKwC,MAAMK,KAAKN,GAAGa,KAExBpD,EAAKwC,MAAMK,KAAKN,GAAGc,QAGxBP,EAAQH,KAAKd,EAAAC,EAAAC,cAAA,YAEf,OAAOe,GA5HQ9C,EAgInBsD,eAAiB,WACf,OAAItD,EAAKwC,MAAMf,YAAYiB,OAAS,EAC3Bb,EAAAC,EAAAC,cAAA,aAEA/B,EAAKwC,MAAMf,aAlIpBzB,EAAKwC,MAAQ,CACXe,YAAa,OACbC,SAAU,GACVC,SAAU,GACVC,KAAM,EACNC,QAAS,EACTC,QAAS,EACTnB,SAAU,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,IAC1ChB,YAAa,GACboB,KAAM,IAXS7C,oFAeE,IAAA6D,EAAA1D,KACnB2D,IAAMC,IDVR,sHCUiBC,KAAK,SAAAxD,GAAG,OACrBqD,EAAKrC,SAAS,CACZ+B,YAAa/C,EACbgD,SAAUhD,EAAIY,KAAK6C,QAAQ,GAAGC,KAC9BT,SAAUjD,EAAIY,KAAK6C,QAAQ,GAAGE,YAC9BT,KAAMlD,EAAIY,KAAK8C,KAAKR,KACpBC,QAASS,KAAKC,MAAM7D,EAAIY,KAAK8C,KAAKI,UAClCV,QAASQ,KAAKC,MAAM7D,EAAIY,KAAK8C,KAAKK,cAGtCT,IAAMC,IDlBR,qECkByBC,KAAK,SAAAxD,GAAG,OAAIqD,EAAKrC,SAAS,CAAEiB,SAAUjC,EAAIY,SACjE,IAAIX,EAAI,IAAIC,KACRC,EAAOF,EAAEG,cACTC,EAAQJ,EAAEK,YACdD,GAAgB,GACJ,KACVA,EAAK,IAAAE,OAAOF,IAEd,IAAIG,EAAMP,EAAEQ,UACRD,EAAM,KACRA,EAAG,IAAAD,OAAOC,IAEH,GAAAD,OAAMJ,EAAN,KAAAI,OAAcF,EAAd,KAAAE,OAAuBC,GAChC8C,IACGC,ID9BL,0DC+BKC,KAAK,SAAAxD,GAAG,OACPqD,EAAKtD,cAAcC,KAEvBsD,IAAMC,IDHR,2FCGqBC,KAAK,SAAAxD,GAAG,OAAIqD,EAAKrC,SAAS,CAAEqB,KAAMrC,EAAIY,KAAKoD,8CA6F9D,IAAI/D,EAAI,IAAIC,KACZ,OACEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WACC5B,KAAKwB,YACNE,EAAAC,EAAAC,cAAA,MAAIgB,MAAO,CAAE0B,WAAY,SACzB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,cAAsC5C,EAAKqB,EAAE4B,UAA7C,KAEAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZ,IADH,OAES3C,EAAOoB,EAAEK,YAFlB,IAEgCL,EAAEQ,UAFlC,KAE+CR,EAAEG,cAAe,KAEhEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,QAAgC7B,KAAKmD,kBACrCzB,EAAAC,EAAAC,cAAA,MAAIgB,MAAO,CAAE0B,WAAY,SACzB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7C,UAAWA,GAAtD,0BAIFuC,EAAAC,EAAAC,cAAA,SAAO2C,GAAG,QAAQvE,KAAKiC,YAEvBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7C,UAAWA,GAAtD,mBAIFuC,EAAAC,EAAAC,cAAA,WAAM5B,KAAKyC,eAEXf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7C,UAAWA,GAAtD,yBAIFuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,QAAMgB,MAAO,CAAEE,WAAY,SACxB9C,KAAKqC,MAAMgB,SADd,KAC0BrD,KAAKqC,MAAMiB,SADrC,MAIF5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,eACe,IACbH,EAAAC,EAAAC,cAAA,QAAMgB,MAAO,CAAEE,WAAY,SAAW9C,KAAKqC,MAAMkB,KAAjD,UAEF7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,QACQ,IACNH,EAAAC,EAAAC,cAAA,QAAMgB,MAAO,CAAEE,WAAY,SACxB9C,KAAKqC,MAAMmB,QADd,QAFF,YAME9B,EAAAC,EAAAC,cAAA,QAAMgB,MAAO,CAAEE,WAAY,SACxB9C,KAAKqC,MAAMoB,QADd,WAKJ/B,EAAAC,EAAAC,cAAA,MAAIgB,MAAO,CAAC0B,WAAY,iBAhMCE,IAAMC,WCPnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC","file":"static/js/main.d3353c5c.chunk.js","sourcesContent":["export const days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nexport const months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\n\r\nexport const API =\r\n  \"https://api.openweathermap.org/data/2.5/weather?zip=97007,us&APPID=8e44c500eae35929bb2690f0b5c52ac5&units=imperial\";\r\nexport const scheduleAPI =\r\n  \"https://my-json-server.typicode.com/jingalls1/scheduledb/schedule\";\r\nexport const holidayAPI =\r\n  \"https://holidayapi.pl/v1/holidays?country=US&year=2019\";\r\n\r\nexport const schedule = [\r\n  [\"nothing today, happy sunday!\"],\r\n  [\r\n    \"12:00pm Italian 317\",\r\n    \"2:00pm Marketing 470\",\r\n    \"4:00pm CIT 383\",\r\n    \"5:30pm House Dinner\"\r\n  ],\r\n  [\r\n    \"8:00am International Studies 360\",\r\n    \"10:00am Duck Athletic Fund job\",\r\n    \"3:00pm Workout A/B\"\r\n  ],\r\n  [\"12: 00pm Italian 317\", \"2:00pm Marketing 470\", \"4:00pm CIT 383\"],\r\n  [\r\n    \"8:00am International Studies 360\",\r\n    \"10:00am Duck Athletic Fund job\",\r\n    \"3:00pm Workout A/B\"\r\n  ],\r\n  [\r\n    \"8:00am Duck Athletic Fund job\",\r\n    \"12:30pm Handshake Career Center Appointment\",\r\n    \"2:00pm CIT Lab\",\r\n    \"4:00pm CIT 383\"\r\n  ],\r\n  [\"12:00pm Workout A/B\"]\r\n];\r\n\r\nexport const newsAPI =\r\n  \"https://newsapi.org/v2/top-headlines?\" +\r\n  \"country=us&\" +\r\n  \"apiKey=fe80a73d44b04fd2a742a3e5c35506e2\";\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { days, months, API } from \"./misc.js\";\nimport { scheduleAPI } from \"./misc.js\";\nimport { holidayAPI } from \"./misc\";\nimport { newsAPI } from \"./misc\";\nimport SplitText from \"react-pose-text\";\n\nconst charPoses = {\n  exit: { opacity: 0, y: 20 },\n  enter: {\n    opacity: 1,\n    y: 0,\n    delay: ({ charIndex }) => charIndex * 100\n  }\n};\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: \"null\",\n      descrip1: \"\",\n      descrip2: \"\",\n      temp: 0,\n      tempMin: 0,\n      tempMax: 0,\n      schState: [[0], [1], [2], [3], [4], [5], [6]],\n      holidayName: \"\",\n      news: []\n    };\n  }\n\n  componentWillMount() {\n    axios.get(API).then(res =>\n      this.setState({\n        weatherData: res,\n        descrip1: res.data.weather[0].main,\n        descrip2: res.data.weather[0].description,\n        temp: res.data.main.temp,\n        tempMin: Math.round(res.data.main.temp_min),\n        tempMax: Math.round(res.data.main.temp_max)\n      })\n    );\n    axios.get(scheduleAPI).then(res => this.setState({ schState: res.data }));\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth();\n    month = month + 1;\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    let day = d.getDate();\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    let today = `${year}-${month}-${day}`;\n    axios\n      .get(holidayAPI)\n      .then(res =>\n        this.axiosHolidays(res)\n      );\n    axios.get(newsAPI).then(res => this.setState({ news: res.data.articles }));\n  }\n\n  axiosHolidays = (res) => {\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth();\n    month = month + 1;\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    let day = d.getDate();\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    let today = `${year}-${month}-${day}`;\n    if (res.data.holidays[today] === undefined) {\n      console.log('no holidays today')\n    } else {\n      this.setState({holidayName: res.data.holidays[today][0].name})\n    }\n  }\n  \n  timeOfDay = () => {\n    let d = new Date();\n    if (d.getHours() < 12) {\n      return (\n        <div className=\"title\">\n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n            Good Morning, Jacob\n          </SplitText>\n        </div>\n      );\n    } else if (d.getHours() >= 12 && d.getHours() < 18) {\n      return (\n        <div className=\"title\">\n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n            Good Afternoon, Jacob\n          </SplitText>\n        </div>\n      );\n    } else\n      return (\n        <div className=\"title\">\n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n            Good Evening, Jacob\n          </SplitText>\n        </div>\n      );\n  };\n\n  listLoop = () => {\n    let d = new Date().getDay();\n    let daschedule = [];\n    for (let i = 0; i < this.state.schState[d].length; i++) {\n      daschedule.push(\n        <tr>\n          <td>{this.state.schState[d][i]}</td>\n        </tr>\n      );\n    }\n    return daschedule;\n  };\n\n  newsHandler = () => {\n    if (this.state.news.length < 1) {\n      return <div>&nbsp;</div>;\n    } else {\n      let arrTest = [];\n      for (let i = 0; i < 6; i++) {\n        arrTest.push(\n          <a\n            style={{ color: \"white\", fontWeight: \"bold\", textShadow: \"2px 2px 4px black\" }}\n            href={this.state.news[i].url}\n          >\n            {this.state.news[i].title}\n          </a>\n        );\n        arrTest.push(<br />);\n      }\n      return arrTest;\n    }\n  };\n\n  holidayHandler = () => {\n    if (this.state.holidayName.length < 1) {\n      return <span />;\n    } else {\n      return this.state.holidayName;\n    }\n  };\n\n  render() {\n    let d = new Date();\n    return (\n      <div className=\"fuck\">\n        <br />\n        {this.timeOfDay()}\n        <br style={{ lineHeight: \"1.6\" }} />\n        <div className=\"title2\"> &nbsp;Happy {days[d.getDay()]}!</div>\n\n        <div className=\"title3\">\n          {\" \"}\n          &nbsp;{months[d.getMonth()]} {d.getDate()}, {d.getFullYear()}{\" \"}\n        </div>\n        <div className=\"title3\"> &nbsp;{this.holidayHandler()}</div>\n        <br style={{ lineHeight: \"1.3\" }} />\n        <div className=\"App\">\n          <div className=\"weather\">\n            <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n              Here's Today's Agenda\n            </SplitText>\n          </div>\n          <table id=\"list\">{this.listLoop()}</table>\n\n          <div className=\"weather\">\n            <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n              News Headlines\n            </SplitText>\n          </div>\n          <div>{this.newsHandler()}</div>\n\n          <div className=\"weather\">\n            <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n              Weather rn in Eugene\n            </SplitText>\n          </div>\n          <div className=\"weather2\">\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.descrip1} ({this.state.descrip2})\n            </span>\n          </div>\n          <div className=\"weather2\">\n            current temp{\" \"}\n            <span style={{ fontWeight: \"bold\" }}>{this.state.temp}&deg;F</span>\n          </div>\n          <div className=\"weather2\">\n            range{\" \"}\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.tempMin}&deg;\n            </span>\n            &nbsp;-&nbsp;\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.tempMax}&deg;F\n            </span>\n          </div>\n        </div>\n        <br style={{lineHeight: \"2.3\"}}/>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}